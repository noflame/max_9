#*****************************************************************************
# Copyright 1986-2006 by mental images GmbH, Fasanenstr. 81, D-10623 Berlin,
# Germany. All rights reserved.
#*****************************************************************************
# Author:   Zap 
# Created:  25.01.2006
# Module:   architectural
# Purpose:  .mi declarations for architectural shaders
#
# Exports:
#   mia_physicalsun
#   mia_physicalsky
#   mia_material
#   mia_roundcorners
#   mia_exposure_simple
#
# History:
#   25.01.06 zap:  Created
#   10.05.06 zap:  New version
#   01.06.06 zap:  Updated
#
#****************************************************************************/

#
# Shader for the mental ray physical sun
#
declare shader "mia_physicalsun" (
        boolean "on"                   default on,
        scalar  "multiplier"           default 1.0,
        color   "rgb_unit_conversion"  default 0.0001 0.0001 0.0001,
        scalar  "haze"                 default 0.0,
        scalar  "redblueshift"         default 0.0,
        scalar  "saturation"           default 1.0,
        scalar  "horizon_height"       default 0.0,
        scalar  "shadow_softness"      default 1.0,
        integer "samples"              default 8,
        vector  "photon_bbox_min",
        vector  "photon_bbox_max",
        boolean "automatic_photon_energy",
        boolean "y_is_up"
    )

    version 5
    apply light
   
end declare


#
# Shader for the mental ray physical sky
# 
declare shader "mia_physicalsky" (
        boolean "on"                  default on,
        scalar  "multiplier"          default 1.0,
        color   "rgb_unit_conversion" default 0.0001 0.0001 0.0001,
        scalar  "haze"                default 0.0,
        scalar  "redblueshift"        default 0.0,
        scalar  "saturation"          default 1.0,

        scalar  "horizon_height"      default 0.0,
        scalar  "horizon_blur"        default 0.1,
        color   "ground_color"        default 0.2 0.2 0.2,
        color   "night_color"         default 0 0 0,

        vector  "sun_direction",
        light   "sun",   

        # The following parameters are only useful
        # when the shader is used as environment
        scalar  "sun_disk_intensity"  default 1.0,
        scalar  "sun_disk_scale"      default 4.0,
        scalar  "sun_glow_intensity"  default 1.0,

        boolean "use_background",
        shader  "background",

        # For the lens/volume shader mode
        scalar  "visibility_distance",

        boolean "y_is_up",
        integer "flags"
    )

    version 4
    apply environment, texture, lens, volume

end declare


#
# The Arch&Design monolithic material
#

declare shader "mia_material" (
        scalar  "diffuse_weight"      default 1.0, #: min 0.0 max 1.0
        color   "diffuse"             default 0.5 0.5 0.5,
        scalar  "diffuse_roughness"   default 0.0, #: min 0.0 max 1.0

        scalar  "reflectivity"        default 0.6, #: min 0.0 max 1.0
        color   "refl_color"          default 1.0 1.0 1.0,
        scalar  "refl_gloss"          default 1.0, #: min 0.0 max 1.0
        integer "refl_gloss_samples"  default 8,   #: min 0 softmax 128
        boolean "refl_interpolate"    default off,
        boolean "refl_hl_only"        default off,
        boolean "refl_is_metal"       default off,

        scalar  "transparency"        default 0.0, #: min 0.0 max 1.0
        color   "refr_color"          default 1.0 1.0 1.0,
        scalar  "refr_gloss"          default 1.0, #: min 0.0 max 1.0
        scalar  "refr_ior"            default 1.4, #: min 0.1 softmax 2.0
        integer "refr_gloss_samples"  default 8,   #: min 0 softmax 128
        boolean "refr_interpolate"    default off,
        boolean "refr_translucency"   default off,
        color   "refr_trans_color"    default 0.7 0.6 0.5,
        scalar  "refr_trans_weight"   default 0.5, #: min 0.0 max 1.0

        scalar  "anisotropy"          default 1.0, #: min 0.1 softmax 10
        scalar  "anisotropy_rotation" default 0.0, #: softmin 0 softmax 1
        integer "anisotropy_channel"  default -1,  #: min -1  softmax 64

        boolean "brdf_fresnel"         default off,
        scalar  "brdf_0_degree_refl"   default 0.2, #: min 0.0 max 1.0
        scalar  "brdf_90_degree_refl"  default 1.0, #: min 0.0 max 1.0
        scalar  "brdf_curve"           default 5.0, #: min 0.1 softmax 20
        boolean "brdf_conserve_energy" default on,

        # Interpolation settings
        
        integer "intr_grid_density"   default 2,    #: min 0 max 5
        integer "intr_refl_samples"   default 2,    #: min 0 softmax 5
        boolean "intr_refl_ddist_on"  default off,
        scalar  "intr_refl_ddist"     default 0.0,
        integer "intr_refr_samples"   default 2,    #: min 0 softmax 5
        boolean "single_env_sample"   default off,

        # Reflection/Refraction optimizations & falloffs

        boolean  "refl_falloff_on"       default off,
        scalar   "refl_falloff_dist"     default 0.0,
        boolean  "refl_falloff_color_on" default off,
        color    "refl_falloff_color"    default 0 0 0,
        integer  "refl_depth"            default 5,    #: min 0 softmax 10
        scalar   "refl_cutoff"           default 0.01, #: min 0.0 max 1.0

        boolean  "refr_falloff_on"       default off,
        scalar   "refr_falloff_dist"     default 0.0,
        boolean  "refr_falloff_color_on" default off,
        color    "refr_falloff_color"    default 0 0 0,
        integer  "refr_depth"            default 5,    #: min 0 softmax 10
        scalar   "refr_cutoff"           default 0.01, #: min 0.0 max 1.0

        # Factors

        scalar   "indirect_multiplier"   default 1.0,  #: min 0 softmax 1.0
        scalar   "fg_quality"            default 1.0,  #: min 0 softmax 10.0
        scalar   "fg_quality_w"          default 1.0,  #: min 0 softmax 1.0

        # Built in AO
        
        boolean  "ao_on"          default off,
        integer  "ao_samples"     default 16,          #: min 0 softmax 128
        scalar   "ao_distance"    default 10.0,
        color    "ao_dark"        default 0.2 0.2 0.2,
        color    "ao_ambient"     default 0.0 0.0 0.0,
        boolean  "ao_do_details"  default on,

        # Options

        boolean  "thin_walled"            default off,
        boolean  "no_visible_area_hl"     default on,
        boolean  "skip_inside_refl"       default on,
        boolean  "do_refractive_caustics" default off,
        boolean  "backface_cull"          default off,
        boolean  "propagate_alpha"        default off,    

        # Other effects
        
        scalar   "hl_vs_refl_balance"     default 1.0,   #: min 0.0 softmax 1.0
        scalar   "cutout_opacity"         default 1.0,   #: min 0.0 max 1.0
        color    "additional_color"       default 0 0 0 0,
        shader   "bump",
        boolean  "no_diffuse_bump"        default off,

        integer     "mode",
        array light "lights"
    )
    version 14
    apply material, photon, shadow    
end declare

#
# - Round corners bump shader
#   Creates an emulated "roundness" to edges as a 
#   shading effect (i.e. an on-the-fly bump map that
#   fillets of edges)
#
declare shader "mia_roundcorners" (
        scalar "radius",
        boolean "allow_different_materials",
        shader  "bump"
    )
    version 2
    apply texture
end declare	




#
#  Simple compressed exposure tone operator. Use as lens
#  or output shader. 
#
declare shader  "mia_exposure_simple" (
		scalar  "pedestal"       default 0.0,
		scalar  "gain"           default 1.0,
		scalar  "knee"           default 0.5,
		scalar  "compression"    default 2.0,
		scalar  "gamma"          default 2.2,
		color   texture "preview",
		boolean "use_preview"
	)
	version 1
	apply lens, output
end declare	
